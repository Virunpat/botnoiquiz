{"ast":null,"code":"var _jsxFileName = \"/Users/virunpat/Documents/botnoiquestion1/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [number, setNumber] = useState(\"\");\n  const [pattern, setPattern] = useState(\"\");\n  const generatePattern = num => {\n    let result = \"\";\n    for (let row = 1; row <= num; row++) {\n      result += \"*\".repeat(row) + \"\\n\";\n    }\n    for (let row = num - 1; row >= 1; row--) {\n      result += \"*\".repeat(row) + \"\\n\";\n    }\n    return result;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const num = parseInt(number);\n    if (!isNaN(num) && num > 0) {\n      setPattern(generatePattern(num));\n    } else {\n      setPattern(\"Enter some number\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Input:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: number,\n          onChange: e => setNumber(e.target.value),\n          style: {\n            marginLeft: \"5px\",\n            marginRight: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        whiteSpace: \"pre-wrap\"\n      },\n      children: pattern\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YFR9BkPzh4/cktLFcc1uGHK7PHE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","number","setNumber","pattern","setPattern","generatePattern","num","result","row","repeat","handleSubmit","e","preventDefault","parseInt","isNaN","children","onSubmit","type","value","onChange","target","style","marginLeft","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/virunpat/Documents/botnoiquestion1/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [number, setNumber] = useState(\"\");\n  const [pattern, setPattern] = useState(\"\");\n\n  const generatePattern = (num) => {\n    let result = \"\";\n  \n    for (let row = 1; row <= num; row++) {\n      result += \"*\".repeat(row) + \"\\n\"; \n    }\n\n    for (let row = num - 1; row >= 1; row--) {\n      result += \"*\".repeat(row) + \"\\n\"; \n    }\n  \n    return result;\n  };\n  \n  \n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    const num = parseInt(number); \n    if (!isNaN(num) && num > 0) {\n      setPattern(generatePattern(num)); \n    } else {\n      setPattern(\"Enter some number\"); \n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Input:\n          <input\n            type=\"number\"\n            value={number}\n            onChange={(e) => setNumber(e.target.value)} \n            style={{ marginLeft: \"5px\", marginRight: \"5px\" }}\n          />\n        </label>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div style={{ marginTop: \"20px\", whiteSpace: \"pre-wrap\" }}>\n        {pattern}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,eAAe,GAAIC,GAAG,IAAK;IAC/B,IAAIC,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIF,GAAG,EAAEE,GAAG,EAAE,EAAE;MACnCD,MAAM,IAAI,GAAG,CAACE,MAAM,CAACD,GAAG,CAAC,GAAG,IAAI;IAClC;IAEA,KAAK,IAAIA,GAAG,GAAGF,GAAG,GAAG,CAAC,EAAEE,GAAG,IAAI,CAAC,EAAEA,GAAG,EAAE,EAAE;MACvCD,MAAM,IAAI,GAAG,CAACE,MAAM,CAACD,GAAG,CAAC,GAAG,IAAI;IAClC;IAEA,OAAOD,MAAM;EACf,CAAC;EAGD,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMN,GAAG,GAAGO,QAAQ,CAACZ,MAAM,CAAC;IAC5B,IAAI,CAACa,KAAK,CAACR,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,EAAE;MAC1BF,UAAU,CAACC,eAAe,CAACC,GAAG,CAAC,CAAC;IAClC,CAAC,MAAM;MACLF,UAAU,CAAC,mBAAmB,CAAC;IACjC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAMkB,QAAQ,EAAEN,YAAa;MAAAK,QAAA,gBAC3BjB,OAAA;QAAAiB,QAAA,GAAO,QAEL,eAAAjB,OAAA;UACEmB,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEjB,MAAO;UACdkB,QAAQ,EAAGR,CAAC,IAAKT,SAAS,CAACS,CAAC,CAACS,MAAM,CAACF,KAAK,CAAE;UAC3CG,KAAK,EAAE;YAAEC,UAAU,EAAE,KAAK;YAAEC,WAAW,EAAE;UAAM;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR7B,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACP7B,OAAA;MAAKuB,KAAK,EAAE;QAAEO,SAAS,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAd,QAAA,EACvDZ;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAhDQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}